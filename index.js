'use strict';

const { 
  isPrimitiveNumber, 
  isObjectLiteral,
  precisionRound,
} = require('./basic');

const {
  ciToCf,
  galsToInches,
  galsToCi,
  galsToCf,
  galsToLbs,
  lbsToGals,
  calcVwc,
  celsius2kelvin,
  kelvin2celsius,
  deg2rad,
  rad2deg,
} = require('./conversions');

const {
  isValidDate,
  calcDayOfYearFromTimestamp,
  getTheTimezoneOffset,
  isDaylightSavings,
  getDaysOfMonth,
  formatOffsetAsString,
  leadingZero,
  removeSpacesFromString,
  parseTimestampString,
  convertStringToTimestamp,
  convertTimestampToString,
  convertLocalStringTimestampToZuluStringTimestamp,
  dropZoneFromTimestamp,
  convertTimestampToIntegers,
  convertIntegersToTimestamp,
  totalMinsHoursDays,
  dateDelta,
  addTime,
  createTimeframes,
  rangeIsIncluded,
  printDate,
  createTimestampLabel,
} = require('./date-time');

const {
  correctInputType,
  print,
  titleCaseWord, 
  lowerCaseWord,
  convertScToCc,
  convertCcToSc,
  convertCcToSpace,
  convertObjectKeyCase, 
  shiftObjectKeysColumn,
  shiftArrayKeysColumn,
  getKeyArray, 
  validateObjectKeysPresent,
  validateObjectKeys,
  limitObjectKeys,
  roundAllValues,
  subArrayByKey,
  totalAndAverageArrays,
  deltaArray,
  immutableArrayInsert,
  immutableArraySplice,
  removeAllItemsFromArray,
  addAllItemsToArray,
  getPositionToInterpolate,
  interpolateArrayValues,
} = require('./lib');

const { 
  formatTimestampForSql,
  escapeSpecial,
  unEscapeSpecial,
  formatDataForSql,
  formatObjectForKnex, 
  formatReqBodyForKnex,
  prefixCommonKeys, 
  createSqlFetchTableKeys,
} = require('./sql');

module.exports = {
  // basic
  isPrimitiveNumber, 
  isObjectLiteral,
  precisionRound,
  
  // conversions
  ciToCf,
  galsToInches,
  galsToCi,
  galsToCf,
  galsToLbs,
  lbsToGals,
  calcVwc,
  celsius2kelvin,
  kelvin2celsius,
  deg2rad,
  rad2deg,
  
  // date-time
  isValidDate,
  calcDayOfYearFromTimestamp,
  getTheTimezoneOffset,
  isDaylightSavings,
  getDaysOfMonth,
  formatOffsetAsString,
  leadingZero,
  removeSpacesFromString,
  parseTimestampString,
  convertStringToTimestamp,
  convertTimestampToString,
  convertLocalStringTimestampToZuluStringTimestamp,
  dropZoneFromTimestamp,
  convertTimestampToIntegers,
  convertIntegersToTimestamp,
  totalMinsHoursDays,
  dateDelta,
  addTime,
  createTimeframes,
  rangeIsIncluded,
  printDate,
  createTimestampLabel,
  
  // lib
  correctInputType,
  print,
  titleCaseWord, 
  lowerCaseWord,
  convertScToCc,
  convertCcToSc,
  convertCcToSpace,
  convertObjectKeyCase, 
  shiftObjectKeysColumn,
  shiftArrayKeysColumn,
  getKeyArray, 
  validateObjectKeysPresent,
  validateObjectKeys,
  limitObjectKeys,
  roundAllValues,
  subArrayByKey,
  totalAndAverageArrays,
  deltaArray,
  immutableArrayInsert,
  immutableArraySplice,
  removeAllItemsFromArray,
  addAllItemsToArray,
  getPositionToInterpolate,
  interpolateArrayValues,
  
  // sql
  formatTimestampForSql,
  escapeSpecial,
  unEscapeSpecial,
  formatDataForSql,
  formatObjectForKnex, 
  formatReqBodyForKnex,
  prefixCommonKeys, 
  createSqlFetchTableKeys,
};